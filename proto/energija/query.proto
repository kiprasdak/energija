syntax = "proto3";
package kiprasdak.energija.energija;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "energija/smart_meter.proto";
import "energija/energy_store.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/kiprasdak/energija/x/energija/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a smartMeter by index.
	rpc SmartMeter(QueryGetSmartMeterRequest) returns (QueryGetSmartMeterResponse) {
		option (google.api.http).get = "/kiprasdak/energija/energija/smartMeter/{index}";
	}

	// Queries a list of smartMeter items.
	rpc SmartMeterAll(QueryAllSmartMeterRequest) returns (QueryAllSmartMeterResponse) {
		option (google.api.http).get = "/kiprasdak/energija/energija/smartMeter";
	}

// Queries a energyStore by index.
	rpc EnergyStore(QueryGetEnergyStoreRequest) returns (QueryGetEnergyStoreResponse) {
		option (google.api.http).get = "/kiprasdak/energija/energija/energyStore/{index}";
	}

	// Queries a list of energyStore items.
	rpc EnergyStoreAll(QueryAllEnergyStoreRequest) returns (QueryAllEnergyStoreResponse) {
		option (google.api.http).get = "/kiprasdak/energija/energija/energyStore";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetSmartMeterRequest {
	  string index = 1;

}

message QueryGetSmartMeterResponse {
	SmartMeter smartMeter = 1 [(gogoproto.nullable) = false];
}

message QueryAllSmartMeterRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSmartMeterResponse {
	repeated SmartMeter smartMeter = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetEnergyStoreRequest {
	  string index = 1;

}

message QueryGetEnergyStoreResponse {
	EnergyStore energyStore = 1 [(gogoproto.nullable) = false];
}

message QueryAllEnergyStoreRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEnergyStoreResponse {
	repeated EnergyStore energyStore = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
